" https://github.com/rafi/vim-config
" Maintainer: Rafael Bodill

" Runtime and Plugins
" ===

if &compatible
	" vint: -ProhibitSetNoCompatible
	set nocompatible
	" vint: +ProhibitSetNoCompatible
endif

" Set main configuration directory as parent directory
let $VIM_PATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')

" When using VIMINIT trick for exotic MYVIMRC locations, add path now.
if &runtimepath !~# $VIM_PATH
	set runtimepath^=$VIM_PATH
endif

let $DATA_PATH = g:etc#cache_path

" Search and use environments specifically made for Neovim.
if isdirectory(g:etc#cache_path.'/venv/neovim2')
	let g:python_host_prog = g:etc#cache_path.'/venv/neovim2/bin/python'
endif
if isdirectory(g:etc#cache_path.'/venv/neovim3')
	let g:python3_host_prog = g:etc#cache_path.'/venv/neovim3/bin/python'
endif

" Set augroup
augroup user_events
	autocmd!
augroup END

" Disable vim distribution plugins
let g:loaded_getscript = 1
let g:loaded_getscriptPlugin = 1
let g:loaded_gzip = 1
let g:loaded_logiPat = 1
let g:loaded_matchit = 1
let g:loaded_matchparen = 1
let g:netrw_nogx = 1 " disable netrw's gx mapping.
let g:loaded_rrhelper = 1
let g:loaded_shada_plugin = 1
let g:loaded_tar = 1
let g:loaded_tarPlugin = 1
let g:loaded_tutor_mode_plugin = 1
let g:loaded_2html_plugin = 1
let g:loaded_vimball = 1
let g:loaded_vimballPlugin = 1
let g:loaded_zip = 1
let g:loaded_zipPlugin = 1

" Initialize base requirements
if has('vim_starting')
	" Global Mappings "{{{
	" Use spacebar as leader and ; as secondary-leader
	" Required before loading plugins!
	let g:mapleader="\<Space>"
	let g:maplocalleader=';'

	" Release keymappings prefixes, evict entirely for use of plug-ins.
	nnoremap <Space>  <Nop>
	xnoremap <Space>  <Nop>
	nnoremap ,        <Nop>
	xnoremap ,        <Nop>
	nnoremap ;        <Nop>
	xnoremap ;        <Nop>

	if ! has('nvim') && has('pythonx')
		if has('python3')
			set pyxversion=3
		elseif has('python')
			set pyxversion=2
		endif
	endif

	" Ensure data directories
	call etc#util#ensure_directory([
		\   g:etc#cache_path . '/undo',
		\   g:etc#cache_path . '/backup',
		\   g:etc#cache_path . '/session',
		\   g:etc#vim_path . '/spell'
		\ ])

	" Vim only, Linux terminal settings
	if ! has('nvim') && ! has('gui_running') && ! has('win32') && ! has('win64')
		call etc#util#source_file('config/terminal.vim')
	endif
endif

" Load user scripts with confidential information
" or pre-settings like g:elite_mode
if filereadable(g:etc#vim_path.'/.vault.vim')
	call etc#util#source_file('.vault.vim')
endif

" Initialize plugin-manager and load main config files
call etc#init()
call etc#util#source_file('config/plugins/all.vim')
call etc#util#source_file('config/general.vim')
call etc#util#source_file('config/filetype.vim')
call etc#util#source_file('config/mappings.vim')

" Initialize user favorite colorscheme
call theme#init()

" Load user custom local settings
if filereadable(g:etc#vim_path.'/config/local.vim')
	call etc#util#source_file('config/local.vim')
endif

" Trigger colorscheme events when vimrc is reloaded within vim
if ! has('vim_starting')
	doautocmd ColorScheme
endif

set secure

" vim: set ts=2 sw=2 tw=80 noet :
